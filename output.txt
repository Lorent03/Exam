Файл: /home/lorent/Загрузки/Exam/templates/profile.html

<!DOCTYPE html>
<html>
<head>
    <title>Профиль</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="static/css/style.css">
</head>
<body>
    <header class="navbar navbar-expand-md navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/">
                <img src="{{ url_for('static', filename='images/logo.png') }}" alt="Logo">
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ml-auto">
                    {% if current_user.is_authenticated %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('profile') }}">Профиль</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('logout') }}">Выход из профиля</a>
                    </li>
                    {% else %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('login') }}">Вход</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('register') }}">Регистрация</a>
                    </li>
                    {% endif %}
                </ul>
            </div>
        </div>
    </header>

    <div class="content">
        <div class="container my-5">
            <h2>Профиль пользователя</h2>
            {% for cat, msg in get_flashed_messages(True) %}
            <div class="flash {{cat}}">{{msg}}</div>
            {% endfor %}
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Имя пользователя: {{ current_user.username }}</h5>
                    <form method="POST" action="{{ url_for('change_password') }}">
                        <div class="form-group">
                            <label for="current_password">Текущий пароль</label>
                            <input type="password" class="form-control" id="current_password" name="current_password" required>
                        </div>
                        <div class="form-group">
                            <label for="new_password">Новый пароль</label>
                            <input type="password" class="form-control" id="new_password" name="new_password" required>
                        </div>
                        <div class="form-group">
                            <label for="confirm_password">Подтвердите новый пароль</label>
                            <input type="password" class="form-control" id="confirm_password" name="confirm_password" required>
                        </div>
                        <button type="submit" class="btn btn-primary">Сменить пароль</button>
                    </form>
                    <hr>
                    <a href="{{ url_for('delete_account') }}" class="btn btn-danger">Удалить аккаунт</a>
                    <a href="{{ url_for('user_history') }}" class="btn btn-primary">История запросов</a>
                    {% if is_admin %}
                    <a href="{{ url_for('admin_panel') }}" class="btn btn-primary">Админ-панель</a>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>

    <footer class="bg-dark text-white py-3">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <p>&copy; 2024 Tesseract OCR Бесплатная библиотека.</p>
                </div>
                <div class="col-md-6 text-md-right">
                    <p class="mb-0">
                        <a href="#" class="text-white">Наверх</a>
                    </p>
                </div>
            </div>
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</body>
</html>

Файл: /home/lorent/Загрузки/Exam/templates/admin.html

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tesseract OCR</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="static/css/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
    <header class="navbar navbar-expand-md navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/">
                <img src="{{ url_for('static', filename='images/logo.png') }}" alt="Logo">
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ml-auto">
                    {% if current_user.is_authenticated %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('profile') }}">Профиль</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('logout') }}">Выход из профиля</a>
                    </li>
                    {% else %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('login') }}">Вход</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('register') }}">Регистрация</a>
                    </li>
                    {% endif %}
                </ul>
            </div>
        </div>
    </header>
<head>
    <title>Админ-панель</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
</head>
<body>
<div class="content flex-grow-1">
    <div class="container mt-5">
        <h2>Админ-панель</h2>
        {% with messages = get_flashed_messages(with_categories=true) %}
            {% if messages %}
                {% for category, message in messages %}
                    <div class="alert alert-{{ category }}">{{ message }}</div>
                {% endfor %}
            {% endif %}
        {% endwith %}

        <h3>Список пользователей</h3>
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Имя пользователя</th>
                    <th>Админ</th>
                    <th>Действия</th>
                </tr>
            </thead>
            <tbody>
                {% for user in users %}
                <tr>
                    <td>{{ user.id }}</td>
                    <td>{{ user.username }}</td>
                    <td>{{ user.is_admin }}</td>
                    <td>
                        <form method="POST" style="display: inline;">
                            <input type="hidden" name="action" value="delete">
                            <input type="hidden" name="user_id" value="{{ user.id }}">
                            <button type="submit" class="btn btn-danger btn-sm">Удалить</button>
                        </form>
                    </td>
                </tr>
                {% endfor %}
            </tbody>
        </table>

        <h3>Создать нового пользователя</h3>
        <form method="POST">
            <input type="hidden" name="action" value="create">
            <div class="form-group">
                <label for="username">Имя пользователя</label>
                <input type="text" class="form-control" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="password">Пароль</label>
                <input type="password" class="form-control" id="password" name="password" required>
            </div>
            <div class="form-check">
                <input type="checkbox" class="form-check-input" id="is_admin" name="is_admin" value="1">
                <label class="form-check-label" for="is_admin">Админ</label>
            </div>
            <button type="submit" class="btn btn-primary">Создать</button>
        </form>
    </div>
</div>
</body>
<footer class="bg-dark text-white py-3 mt-auto">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <p>&copy; 2024 Tesseract OCR Бесплатная библиотека.</p>
                </div>
                <div class="col-md-6 text-md-right">
                    <p class="mb-0">
                        <a href="#" class="text-white">Наверх</a>
                    </p>
                </div>
            </div>
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</html>

Файл: /home/lorent/Загрузки/Exam/templates/gpt.html

{% extends 'base.html' %}

{% block title %}GPT Chat{% endblock %}

{% block content %}
<h2>GPT Chat</h2>
<div class="chat-box">
    {% for message in messages %}
        <div class="message {{ 'user' if message['role'] == 'user' else 'bot' }}">
            <strong>{{ 'Вы' if message['role'] == 'user' else 'Bot' }}:</strong> {{ message['content'] }}
        </div>
    {% endfor %}
</div>
<form method="POST" action="{{ url_for('gpt_chat') }}">
    <div class="form-group">
        <label for="question">Ваш вопрос:</label>
        <input type="text" class="form-control" id="question" name="question" required>
    </div>
    <button type="submit" class="btn btn-primary">Отправить</button>
    <button type="submit" name="clear" class="btn btn-danger">Очистить чат</button>
</form>
{% endblock %}



Файл: /home/lorent/Загрузки/Exam/templates/Index.html

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tesseract OCR</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="static/css/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <header class="navbar navbar-expand-md navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/">
                <img src="{{ url_for('static', filename='images/logo.png') }}" alt="Logo">
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ml-auto">
                    {% if current_user.is_authenticated %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('profile') }}">Профиль</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('logout') }}">Выход из профиля</a>
                    </li>
                    {% else %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('login') }}">Вход</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('register') }}">Регистрация</a>
                    </li>
                    {% endif %}
                </ul>
            </div>
        </div>
    </header>

<div class="hero">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8 w-100 text-center">
                <h1 class="mb-4">Tesseract OCR</h1>
                <p class="lead mb-5">Распознавание текста из изображений с помощью Tesseract OCR</p>
                <div>
                    <a href="{{ url_for('upload_file') }}" class="btn btn-primary btn-lg">Перейти</a>
                </div>
            </div>
        </div>
    </div>
</div>

    <section class="py-5 bg-light">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-6">
                    <h2 class="section-heading">О проекте</h2>
                    <p class="lead">Этот проект представляет собой веб-приложение для распознавания текста на изображениях с использованием библиотеки Tesseract OCR. Вы можете загрузить изображение, выбрать язык текста, и приложение автоматически распознает и отобразит текст из изображения.</p>
                </div>
                <div class="col-md-6">
                    <h2 class="section-heading">Преимущества</h2>
                    <ul class="feature-list">
                        <li><i class="fas fa-check text-success"></i> Быстрое и точное распознавание текста</li>
                        <li><i class="fas fa-check text-success"></i> Поддержка множества языков</li>
                        <li><i class="fas fa-check text-success"></i> Простой и удобный интерфейс</li>
                        <li><i class="fas fa-check text-success"></i> Бесплатное использование</li>
                    </ul>
                </div>
            </div>
        </div>
    </section>

    <footer class="bg-dark text-white py-3">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <p>&copy; 2024 Tesseract OCR Бесплатная библиотека.</p>
                </div>
                <div class="col-md-6 text-md-right">
                    <ul class="list-inline">
                        <li class="list-inline-item"><a href="#" class="text-white">Политика конфиденциальности</a></li>
                        <li class="list-inline-item"><a href="#" class="text-white">Условия использования</a></li>
                        <li class="list-inline-item"><a href="#" class="text-white">Контакты</a></li>
                    </ul>
                    <p class="float-right mb-1">
                        <a href="#" class="text-white">Наверх</a>
                    </p>
                </div>
            </div>
        </div>
    </footer>

    <script src="https://kit.fontawesome.com/yourcode.js"></script>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</body>
</html>

Файл: /home/lorent/Загрузки/Exam/templates/register.html

<!DOCTYPE html>
<html>
<head>
    <title>Регистрация</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="static/css/style.css">
</head>
<body>
    <header class="navbar navbar-expand-md navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/">
                <img src="{{ url_for('static', filename='images/logo.png') }}" alt="Logo">
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ml-auto">
                    {% if current_user.is_authenticated %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('profile') }}">Профиль</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('logout') }}">Выход из профиля</a>
                    </li>
                    {% else %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('login') }}">Вход</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('register') }}">Регистрация</a>
                    </li>
                    {% endif %}
                </ul>
            </div>
        </div>
    </header>

    <div class="content">
        <div class="container my-5">
            {% if not current_user.is_authenticated %}
            <div class="container mt-5">
                <h2>Регистрация</h2>
                {% for cat, msg in get_flashed_messages(True) %}
                <div class="flash {{cat}}">{{msg}}</div>
                {% endfor %}
                <form method="POST" action="{{ url_for('register') }}">
                    <div class="form-group">
                        <label for="username">Имя пользователя</label>
                        <input type="text" class="form-control" id="username" name="username" required>
                    </div>
                    <div class="form-group">
                        <label for="password">Пароль</label>
                        <input type="password" class="form-control" id="password" name="password" required>
                    </div>
                    <div class="form-group">
                        <label for="confirm_password">Подтвердите пароль</label>
                        <input type="password" class="form-control" id="confirm_password" name="confirm_password" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Зарегистрироваться</button>
                </form>
                <p class="mt-3">Уже зарегистрированы? <a href="{{ url_for('login') }}">Войти</a></p>
            </div>
            {% else %}
            <div class="container mt-5">
                <p>Вы уже авторизованы. Перейдите в <a href="{{ url_for('profile') }}">профиль</a>.</p>
            </div>
            {% endif %}
        </div>
    </div>

    <footer class="bg-dark text-white py-3">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <p>&copy; 2024 Tesseract OCR Бесплатная библиотека.</p>
                </div>
                <div class="col-md-6 text-md-right">
                    <p class="mb-0">
                        <a href="#" class="text-white">Наверх</a>
                    </p>
                </div>
            </div>
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</body>
</html>

Файл: /home/lorent/Загрузки/Exam/templates/base.html

<!DOCTYPE html>
<html>
<head>
    <title>{% block title %}GPT Chat{% endblock %}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="static/css/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <header class="navbar navbar-expand-md navbar-dark bg-dark">
    <div class="container">
        <a class="navbar-brand" href="/">
            <img src="{{ url_for('static', filename='images/logo.png') }}" alt="Logo">
        </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ml-auto">
                {% if current_user.is_authenticated %}
                <li class="nav-item">
                    <a class="nav-link" href="{{ url_for('profile') }}">Профиль</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="{{ url_for('logout') }}">Выход из профиля</a>
                </li>
                {% else %}
                <li class="nav-item">
                    <a class="nav-link" href="{{ url_for('login') }}">Вход</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="{{ url_for('register') }}">Регистрация</a>
                </li>
                {% endif %}
            </ul>
        </div>
    </div>
</header>

    <div class="container my-5">
        {% block content %}{% endblock %}
    </div>
    <footer class="bg-dark text-white py-3">
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <p>&copy; 2024 Tesseract OCR Бесплатная библиотека.</p>
            </div>
            <div class="col-md-6 text-md-right">
                <p class="mb-0">
                    <a href="#" class="text-white">Наверх</a>
                </p>
            </div>
        </div>
    </div>
</footer>

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</body>
</html>


Файл: /home/lorent/Загрузки/Exam/templates/tesseract.html

<!DOCTYPE html>
<html>
<head>
    <title>File Upload</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="static/css/style.css">
</head>
<body>
    <header class="navbar navbar-expand-md navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/">
    <img src="{{ url_for('static', filename='images/logo.png') }}" alt="Logo">
    </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ml-auto">
                    {% if current_user.is_authenticated %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('profile') }}">Профиль</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('logout') }}">Выход из профиля</a>
                    </li>
                    {% else %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('login') }}">Вход</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('register') }}">Регистрация</a>
                    </li>
                    {% endif %}
                </ul>
            </div>
        </div>
    </header>

    <div class="content flex-grow-1">
    <div class="container my-5">
        <h1 class="text-center mb-4">Выберите файл:</h1>
        {% for cat, msg in get_flashed_messages(True) %}
            <div class="flash {{cat}}">{{msg}}</div>
        {% endfor %}
        <form method="POST" enctype="multipart/form-data" action="{{ url_for('upload_file') }}">
            <div class="form-group">
                <label for="file" class="font-weight-bold">Загрузите файл:</label>
                <input type="file" name="file" id="file" class="form-control-file" required accept="image/*" max="20971520">
            </div>
            <div class="form-group">
                <label for="language" class="font-weight-bold">Выберите язык:</label>
                <select class="form-control" name="language" id="language" required>
                    <option value="eng">Английский</option>
                    <option value="rus">Русский</option>
                </select>
            </div>
            <div class="text-center">
                <button type="submit" class="btn btn-primary btn-lg">Загрузить</button>
            </div>
        </form>
        {% if image_path %}
        <h2 class="mt-4 text-center">Изображение:</h2>
        <div class="text-center">
            <img src="{{ image_path }}" alt="Image" class="img-fluid">
        </div>
        {% endif %}
        {% if extracted_text %}
        <h2 class="mt-4 text-center">Извлеченный текст:</h2>
        <p>{{ extracted_text }}</p>
        {% endif %}
    </div>
    </div>

    <footer class="bg-dark text-white py-3 mt-auto">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <p>&copy; 2024 Tesseract OCR Бесплатная библиотека.</p>
                </div>
                <div class="col-md-6 text-md-right">
                    <p class="mb-0">
                        <a href="#" class="text-white">Наверх</a>
                    </p>
                </div>
            </div>
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</body>
</html>

Файл: /home/lorent/Загрузки/Exam/templates/page404.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Страница не найдена</title>
</head>
<body>
Страница не найдена, вернуться на <a href="/">главную</a> страницу.
</body>
</html>

Файл: /home/lorent/Загрузки/Exam/templates/login.html

<!DOCTYPE html>
<html>
<head>
    <title>Вход</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="static/css/style.css">
</head>
<body>
    <header class="navbar navbar-expand-md navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/">
                <img src="{{ url_for('static', filename='images/logo.png') }}" alt="Logo">
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ml-auto">
                    {% if current_user.is_authenticated %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('profile') }}">Профиль</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('logout') }}">Выход из профиля</a>
                    </li>
                    {% else %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('login') }}">Вход</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('register') }}">Регистрация</a>
                    </li>
                    {% endif %}
                </ul>
            </div>
        </div>
    </header>

    <div class="content">
        <div class="container my-5">
            {% if not current_user.is_authenticated %}
            <div class="container mt-5">
                <h2>Вход</h2>
                {% for cat, msg in get_flashed_messages(True) %}
                <div class="flash {{cat}}">{{msg}}</div>
                {% endfor %}
                <form method="POST" action="{{ url_for('login') }}">
                    <div class="form-group">
                        <label for="username">Имя пользователя</label>
                        <input type="text" class="form-control" id="username" name="username" required>
                    </div>
                    <div class="form-group">
                        <label for="password">Пароль</label>
                        <input type="password" class="form-control" id="password" name="password" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Войти</button>
                </form>
                <p class="mt-3">Еще не зарегистрированы? <a href="{{ url_for('register') }}">Зарегистрироваться</a></p>
            </div>
            {% else %}
            <div class="container mt-5">
                <p>Вы уже авторизованы. Перейдите в <a href="{{ url_for('profile') }}">профиль</a>.</p>
            </div>
            {% endif %}
        </div>
    </div>

    <footer class="bg-dark text-white py-3">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <p>&copy; 2024 Tesseract OCR Бесплатная библиотека.</p>
                </div>
                <div class="col-md-6 text-md-right">
                    <p class="mb-0">
                        <a href="#" class="text-white">Наверх</a>
                    </p>
                </div>
            </div>
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</body>
</html>

Файл: /home/lorent/Загрузки/Exam/templates/delete_account.html

<!DOCTYPE html>
<html>
<head>
    <title>Удаление аккаунта</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h2>Удаление аккаунта</h2>
        <p>Вы уверены, что хотите удалить свой аккаунт?</p>
        <form method="POST" action="{{ url_for('delete_account') }}">
            <button type="submit" class="btn btn-danger">Удалить аккаунт</button>
            <a href="{{ url_for('profile') }}" class="btn btn-secondary">Отмена</a>
        </form>
    </div>
</body>
</html>

Файл: /home/lorent/Загрузки/Exam/templates/history.html

{% extends 'base.html' %}

{% block title %}История запросов{% endblock %}

{% block content %}
<h2>История запросов</h2>
<table class="table">
    <thead>
        <tr>
            <th>Извлеченный текст</th>
            <th>Время</th>
        </tr>
    </thead>
    <tbody>
        {% for row in history %}
        <tr>
            <td>{{ row.extracted_text }}</td>
            <td>{{ row.timestamp }}</td>
        </tr>
        {% endfor %}
    </tbody>
</table>
{% endblock %}


Файл: /home/lorent/Загрузки/Exam/appes.py

```python
import os
import sqlite3
from functools import wraps
import pytesseract
from PIL import Image
from flask import Flask, render_template, request, redirect, url_for, flash, g
from flask_login import LoginManager, UserMixin, login_user, logout_user, login_required, current_user
from werkzeug.security import generate_password_hash, check_password_hash

SECRET_KEY = '34i*u5$gy38H74@r8Ted9s^df'
DATABASE = 'database.db'
DEBUG = True

app = Flask(__name__)

app.config.from_object(__name__)
app.config.update(dict(DATABASE=os.path.join(app.root_path, 'database.db')))
login_manager = LoginManager()
login_manager.init_app(app)
ALLOWED_EXTENSIONS = {'png', 'jpg', 'jpeg', 'gif'}
UPLOAD_FOLDER = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'static', 'uploads')
MAX_CONTENT_LENGTH = 20 * 1024 * 1024  # 20 MB
UPLOADED_IMAGE_NAME = 'uploaded_image.jpg'
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
app.config['MAX_CONTENT_LENGTH'] = MAX_CONTENT_LENGTH


def connect_db():
    conn = sqlite3.connect(app.config['DATABASE'])
    conn.row_factory = sqlite3.Row
    return conn


# Вспомогательная функция для создания таблиц БД
def create_db():
    db = connect_db()
    with app.open_resource('sq_db.sql', mode='r') as f:
        db.cursor().executescript(f.read())
    db.commit()
    db.close()


# Соединение с БД, если оно еще не установлено
def get_db():
    if not hasattr(g, 'link_db'):
        g.link_db = connect_db()
    return g.link_db


# Закрываем соединение с БД, если оно было установлено
@app.teardown_appcontext
def close_db(error):
    if hasattr(g, 'link_db'):
        g.link_db.close()


# Главная страница
@app.route('/')
def index():
    return render_template("Index.html")


# Регистрация
@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        confirm_password = request.form['confirm_password']

        # Проверка длины имени пользователя
        if len(username) < 6:
            flash('Имя пользователя должно содержать не менее 6 символов', category='error')
            return render_template('register.html')

        # Проверка требований к паролю
        if len(password) < 8:
            flash('Пароль должен содержать не менее 8 символов', category='error')
            return render_template('register.html')

        if not any(char.isupper() for char in password):
            flash('Пароль должен содержать хотя бы одну заглавную букву', category='error')
            return render_template('register.html')

        if not any(char.isdigit() for char in password):
            flash('Пароль должен содержать хотя бы одну цифру', category='error')
            return render_template('register.html')

        if password != confirm_password:
            flash('Пароли не совпадают', category='error')
            return render_template('register.html')

        db = get_db()
        try:
            # Хешируем пароль
            hashed_password = generate_password_hash(password)

            # Вставляем нового пользователя в базу данных
            db.execute("INSERT INTO users (username, password, is_admin) VALUES (?, ?, 0)", (username, hashed_password))
            db.commit()
            flash('Регистрация прошла успешно', category='success')
            return redirect(url_for('login'))
        except sqlite3.IntegrityError:
            flash('Имя пользователя уже занято', category='error')
            return render_template('register.html')

    return render_template('register.html')


class User(UserMixin):
    def __init__(self, id, username, is_admin=False):
        self.id = id
        self.username = username
        self.is_admin = is_admin

    def __repr__(self):
        return f'<User {self.username}>'


def admin_required(func):
    @wraps(func)
    def decorated_view(*args, **kwargs):
        if not current_user.is_authenticated or not current_user.is_admin:
            return redirect(url_for('index'))
        return func(*args, **kwargs)

    return decorated_view


@app.route('/admin', methods=['GET', 'POST'])
@admin_required
def admin_panel():
    db = get_db()
    users = db.execute("SELECT * FROM users").fetchall()

    if request.method == 'POST':
        action = request.form.get('action')
        user_id = request.form.get('user_id')

        if action == 'delete':
            db.execute("DELETE FROM user_history WHERE user_id = ?", (user_id,))
            db.execute("DELETE FROM users WHERE id = ?", (user_id,))
            db.commit()
            flash('Пользователь и его история успешно удалены', 'success')
        elif action == 'create':
            username = request.form.get('username')
            password = request.form.get('password')
            is_admin = request.form.get('is_admin', 0)

            hashed_password = generate_password_hash(password)
            db.execute("INSERT INTO users (username, password, is_admin) VALUES (?, ?, ?)",
                       (username, hashed_password, is_admin))
            db.commit()
            flash('Пользователь успешно создан', 'success')

        users = db.execute("SELECT * FROM users").fetchall()

    return render_template('admin.html', users=users)


@login_manager.user_loader
def load_user(user_id):
    db = get_db()
    user = db.execute("SELECT * FROM users WHERE id = ?", (user_id,)).fetchone()
    if user:
        return User(user['id'], user['username'], user['is_admin'])
    return None


# Вход пользователя
@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']

        db = get_db()
        user = db.execute("SELECT * FROM users WHERE username = ?", (username,)).fetchone()

        if user and check_password_hash(user['password'], password):
            user_obj = User(user['id'], user['username'])
            login_user(user_obj)
            return redirect(url_for('index'))
        else:
            flash('Неверные учетные данные', category='error')

    return render_template('login.html')


@app.route('/logout')
@login_required
def logout():
    logout_user()
    return redirect(url_for('index'))


@app.route('/profile')
@login_required
def profile():
    is_admin = current_user.is_admin
    return render_template("profile.html", is_admin=is_admin)


@app.route('/change_password', methods=['POST'])
@login_required
def change_password():
    current_password = request.form['current_password']
    new_password = request.form['new_password']
    confirm_password = request.form['confirm_password']

    db = get_db()
    user = db.execute("SELECT * FROM users WHERE id = ?", (current_user.id,)).fetchone()

    if user and check_password_hash(user['password'], current_password):
        # Проверка требований к новому паролю
        if len(new_password) < 8:
            flash('Пароль должен содержать не менее 8 символов', category='error')
        elif not any(char.isupper() for char in new_password):
            flash('Пароль должен содержать хотя бы одну заглавную букву', category='error')
        elif not any(char.isdigit() for char in new_password):
            flash('Пароль должен содержать хотя бы одну цифру', category='error')
        elif new_password == confirm_password:
            hashed_password = generate_password_hash(new_password)
            db.execute("UPDATE users SET password = ? WHERE id = ?", (hashed_password, current_user.id))
            db.commit()
            flash('Пароль успешно изменен', category='success')
        else:
            flash('Новые пароли не совпадают', category='error')
    else:
        flash('Неверный текущий пароль', category='error')

    return redirect(url_for('profile'))


@app.route('/delete_account', methods=['GET', 'POST'])
@login_required
def delete_account():
    if request.method == 'POST':
        db = get_db()
        db.execute("DELETE FROM user_history WHERE user_id = ?", (current_user.id,))
        db.execute("DELETE FROM users WHERE id = ?", (current_user.id,))
        db.commit()
        logout_user()
        return redirect(url_for('index'))

    return render_template('delete_account.html')


# редирект с ошибки
@app.errorhandler(404)
def pageNotFount(error):
    return render_template('page404.html'), 404


# редирект с ошибки
@app.errorhandler(401)
def Unauthorized(error):
    return render_template('login.html'), 401


def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS


@app.route('/tesseract', methods=['GET', 'POST'])
def upload_file():
    if request.method == 'POST':
        # Проверка размера файла
        if request.content_length > app.config['MAX_CONTENT_LENGTH']:
            flash('Размер файла превышает ограничение 20 МБ', 'error')
            return redirect(url_for('upload_file'))

        # Получение загруженного файла
        file = request.files['file']

        # Проверка наличия файла и его типа
        if file and allowed_file(file.filename):
            file_path = os.path.join(app.config['UPLOAD_FOLDER'], UPLOADED_IMAGE_NAME)

            # Сохранение файла на сервере
            file.save(file_path)

            # Загрузка изображения с использованием PIL
            image = Image.open(file_path)

            # Преобразование изображения в черно-белый формат
            bw_image = image.convert('L')
            bw_file_path = os.path.join(app.config['UPLOAD_FOLDER'], 'bw_' + UPLOADED_IMAGE_NAME)
            bw_image.save(bw_file_path)

            # Извлечение текста с помощью pytesseract
            extracted_text = pytesseract.image_to_string(bw_image, lang=request.form.get('language'))

            # Сохранение истории запроса для авторизованного пользователя
            if current_user.is_authenticated:
                db = get_db()
                db.execute("INSERT INTO user_history (user_id, extracted_text) VALUES (?, ?)",
                           (current_user.id, extracted_text))
                db.commit()

            # Передача извлеченного текста и пути к изображению на страницу
            return render_template('tesseract.html', extracted_text=extracted_text,
                                   image_path=os.path.join('/', app.config['UPLOAD_FOLDER'],
                                                           'bw_' + UPLOADED_IMAGE_NAME))

        else:
            flash('Пожалуйста, загрузите изображение в формате PNG, JPG, JPEG или GIF', 'error')
            return redirect(url_for('upload_file'))

    # Если метод запроса GET, отобразить страницу загрузки файла
    return render_template('tesseract.html')


@app.route('/history')
@login_required
def user_history():
    db = get_db()
    history = db.execute(
        "SELECT  extracted_text, timestamp FROM user_history WHERE user_id = ? ORDER BY id DESC LIMIT 10",
        (current_user.id,)).fetchall()
    return render_template('history.html', history=history)



import http.client
import json


class Bot:
    def __init__(self, api_key, bot_id, base_url="api.coze.com"):
        self.api_key = api_key
        self.bot_id = bot_id
        self.base_url = base_url
        self.conversation_id = None
        self.chat_history = []

    def ask(self, user, query, stream=False):
        headers = {
            'Authorization': f'Bearer {self.api_key}',
            'Content-Type': 'application/json',
            'Connection': 'keep-alive',
            'Accept': '*/*'
        }

        data = {
            'bot_id': self.bot_id,
            'user': user,
            'query': query,
            'stream': stream,
            'chat_history': self.chat_history
        }

        if self.conversation_id:
            data['conversation_id'] = self.conversation_id

        conn = http.client.HTTPSConnection(self.base_url)
        conn.request("POST", "/open_api/v2/chat", body=json.dumps(data), headers=headers)

        response = conn.getresponse()
        response_data = response.read().decode()

        if response.status == 200:
            response_json = json.loads(response_data)
            self.conversation_id = response_json.get('conversation_id')
            messages = response_json.get('messages', [])
            filtered_messages = []
            for message in messages:
                if message.get('msg_type') == 'generate_answer_finish':
                    print(f"System: {message}")
                elif message.get('content'):
                    filtered_messages.append(message)
                    self.chat_history.append(message)
            return filtered_messages
        else:
            return f"Error: {response.status} - {response_data}"


from flask import Flask, render_template, request, redirect, url_for, flash, g, session

@app.route('/gpt', methods=['GET', 'POST'])
def gpt_chat():
    bot = Bot(api_key="pat_8BIXdKJUqnzXN1vh9CEMLDkh6LZP63cYPxtrd1Duc5TXK7Oqlm7hXSfyTYp2Fr8b",
              bot_id="7376391267590651909")
    user_id = "7376391267590488069"

    if 'chat_history' not in session:
        session['chat_history'] = []

    if request.method == 'POST':
        if 'clear' in request.form:
            session['chat_history'] = []
        else:
            question = request.form['question']
            messages = bot.ask(user_id, question)
            session['chat_history'].extend(messages)

    return render_template('gpt.html', messages=session['chat_history'])


```

